const NUM = 25

const HASHTAG = '# '
const DOT = '. '

for (let i = 0; i < NUM; i++) {
  for (let j = 0; j < NUM; j++) {
    process.stdout.write(condiction(i, j) ? HASHTAG : DOT)
  }

  process.stdout.write("\n")
}


function condiction(i, j) {
  const offset = -4

  const start = NUM + offset
  const width = 12

  return i - j < start && i - j > start - width || i - j < 2*offset && i - j > 2*offset - width
}
/*
. . . . . . . . . # # # # # # # # # # # . . . . . 
. . . . . . . . . . # # # # # # # # # # # . . . . 
. . . . . . . . . . . # # # # # # # # # # # . . . 
. . . . . . . . . . . . # # # # # # # # # # # . . 
. . . . . . . . . . . . . # # # # # # # # # # # . 
. . . . . . . . . . . . . . # # # # # # # # # # # 
. . . . . . . . . . . . . . . # # # # # # # # # # 
. . . . . . . . . . . . . . . . # # # # # # # # # 
. . . . . . . . . . . . . . . . . # # # # # # # # 
. . . . . . . . . . . . . . . . . . # # # # # # # 
# . . . . . . . . . . . . . . . . . . # # # # # # 
# # . . . . . . . . . . . . . . . . . . # # # # # 
# # # . . . . . . . . . . . . . . . . . . # # # # 
# # # # . . . . . . . . . . . . . . . . . . # # # 
# # # # # . . . . . . . . . . . . . . . . . . # # 
# # # # # # . . . . . . . . . . . . . . . . . . # 
# # # # # # # . . . . . . . . . . . . . . . . . . 
# # # # # # # # . . . . . . . . . . . . . . . . . 
# # # # # # # # # . . . . . . . . . . . . . . . . 
# # # # # # # # # # . . . . . . . . . . . . . . . 
# # # # # # # # # # # . . . . . . . . . . . . . . 
. # # # # # # # # # # # . . . . . . . . . . . . . 
. . # # # # # # # # # # # . . . . . . . . . . . . 
. . . # # # # # # # # # # # . . . . . . . . . . . 
. . . . # # # # # # # # # # # . . . . . . . . . . 

*/
