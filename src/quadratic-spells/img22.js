const NUM = 25

const HASHTAG = '# '
const DOT = '. '

for (let i = 0; i < NUM; i++) {
  for (let j = 0; j < NUM; j++) {
    process.stdout.write(condiction(i, j) ? HASHTAG : DOT)
  }

  process.stdout.write("\n")
}


function condiction(i, j) {
  const offset = 1

  for (let step = 0; step < 2*NUM; step = step + 3) {
    const neg = NUM - step * offset - 1
    const pos = NUM + step * offset - 1

    if (i + j === neg || i + j === pos) {
      return true
    }
  }

  return false
}

/*
# . . # . . # . . # . . # . . # . . # . . # . . # 
. . # . . # . . # . . # . . # . . # . . # . . # . 
. # . . # . . # . . # . . # . . # . . # . . # . . 
# . . # . . # . . # . . # . . # . . # . . # . . # 
. . # . . # . . # . . # . . # . . # . . # . . # . 
. # . . # . . # . . # . . # . . # . . # . . # . . 
# . . # . . # . . # . . # . . # . . # . . # . . # 
. . # . . # . . # . . # . . # . . # . . # . . # . 
. # . . # . . # . . # . . # . . # . . # . . # . . 
# . . # . . # . . # . . # . . # . . # . . # . . # 
. . # . . # . . # . . # . . # . . # . . # . . # . 
. # . . # . . # . . # . . # . . # . . # . . # . . 
# . . # . . # . . # . . # . . # . . # . . # . . # 
. . # . . # . . # . . # . . # . . # . . # . . # . 
. # . . # . . # . . # . . # . . # . . # . . # . . 
# . . # . . # . . # . . # . . # . . # . . # . . # 
. . # . . # . . # . . # . . # . . # . . # . . # . 
. # . . # . . # . . # . . # . . # . . # . . # . . 
# . . # . . # . . # . . # . . # . . # . . # . . # 
. . # . . # . . # . . # . . # . . # . . # . . # . 
. # . . # . . # . . # . . # . . # . . # . . # . . 
# . . # . . # . . # . . # . . # . . # . . # . . # 
. . # . . # . . # . . # . . # . . # . . # . . # . 
. # . . # . . # . . # . . # . . # . . # . . # . . 
# . . # . . # . . # . . # . . # . . # . . # . . # 
*/
